
@{
    Layout = "~/Areas/Dashboard/Views/Shared/_Layout.cshtml";
}

@model BrandViewModel
<!--<script src="~/assets/js/plugins/dropify/dropify.min.js"></script>-->
<div class="box">
    <div class="box-head">
        <h4 class="title">@Captions.CreateBrand</h4>
    </div>
    <div class="box-body">
        <form method="post" id="brandform" asp-controller="Brand" asp-action="Create">
            <div id="BrandForm" class="row mbn-20">
            </div>
            <input type="button" value="@Fields.SendButton" onclick="submitForm('brandform')" class="btn btn-primary"></input>

        </form>
        <div id="alert"></div>
    </div>
</div>

<br />

<div class="box">
    <div class="box-head">
        <h4 class="title">@Captions.BrandForm</h4>
    </div>
    <div class="box-body">
        <div class="k-rtl">
            <kendo-grid name="grid" height="550">
                <datasource type="DataSourceTagHelperType.Ajax" page-size="10">
                    <transport>
                        <read url="@Url.Action(Constants.ActionReadAll, Constants.ControllerBrand, new { area=Constants.AreaManagement })" />
                        <update url="@Url.Action(Constants.ActionUpdate, Constants.ControllerBrand, new { area=Constants.AreaManagement })" />
                    </transport>
                    <schema>
                        <model id="@nameof(BrandViewModel.Id)">
                            <fields>
                                <field name="@nameof(BrandViewModel.Id)" type="number"></field>
                                <field name="@nameof(BrandViewModel.Title)"></field>
                            </fields>
                        </model>
                    </schema>
                </datasource>

                <pageable button-count="5" refresh="true" page-sizes="new int[] { 5, 10, 20, 50 }">
                </pageable>
                <sortable enabled="true" />
                <columns>
                    <column field="@nameof(BrandViewModel.Title)" title="@Fields.TitleInput" />
                    @*<column field="@nameof(BrandViewModel.Image)" title="@Fields.ImageInput" template="#=template(data)#" />*@

                    <column>
                        <commands>
                            <column-command name="edit" text="@Fields.EditButtin" click="openEditWindow"></column-command>
                            <column-command name="distroy" text="@Fields.DeleteButton" click="openDeleteWindow"></column-command>
                        </commands>
                    </column>
                </columns>
            </kendo-grid>
        </div>
    </div>
</div>

<script type="text/javascript">
	function submitForm(divName) {

        var formdata = new FormData($("#"+divName)[0]);
        var formAction = $("#"+divName).attr("action");


        if ($("#" + divName).valid()) {

            $.ajax({
                url: formAction,
                data: formdata,
                processData: false,
                contentType: false,
                type: 'POST',
                success: function (data) {
                    if (data) {
						refreshGrid();
                        getCreateForm();
                        $("#alert").html("عملیات با موفقیت  ذخیره گردید");
                    }
                },
                error: function (dataofconfirm) {
                    $(alert).html("عملیات با شکست مواجه شد")
                }
            });
        }
    }
	function template(data) {
		let path = String.raw`../@Constants.PathBrandImageRead/` + data.Image;
		return String.raw`<div class="brand-photo" style="background-image: url(${String.raw`${path}`});"></div>
<input class='imgName' type='hidden' value='${data.Image}'/>`
	}
	function getCreateForm() {
		$.get("@Url.Action(Constants.ActionCreate, Constants.ControllerBrand)", function (data) {
			$('#BrandForm').html(data);
		});
	}
	function getUpdateForm(id) {
		$.get(`@Url.Action(Constants.ActionUpdate, Constants.ControllerBrand)/${id}`, function (data) {
			$('#BrandForm').html(data);
		})
	}
	function refreshGrid() {
		$("#grid").data("kendoGrid").dataSource.read();
    }
    $(document).ready(function () { getCreateForm();});
	function postBrand(url, data = null) {
		if (data === null) {
			let brand = $(brandform).serializeFormJSON();
			$.post({
				url: url,
				data: brand,
				success: null,
				async: false
			});
		}
		else {
			$.post({
				url: url,
				data: data,
				success: null,
				async: false
			});
		}

		refreshGrid();
		getCreateForm();
	}
	function getDataItem(grid, e)
	{
		let button = e.target;
		let row = $(button).closest("tr");
		return grid.dataItem(row);
	}
	function openEditWindow(e) {
		let dataItem = getDataItem(this, e);
		getUpdateForm(dataItem.Id);
	}
	function openDeleteWindow(e) {
		e.preventDefault();
		let dataItem = getDataItem(this, e);

		if (confirm("@Html.Raw(Messages.DeleteCautionMessage)")) {
			postBrand("@Url.Action(Constants.ActionDelete, Constants.ControllerBrand)", { Id: dataItem.Id });
		}
	}

	$(function () {
		//getCreateForm();

		$.fn.serializeFormJSON = function () {
			var o = {};
			var a = this.serializeArray();
			$.each(a, function () {
				if (o[this.name]) {
					if (!o[this.name].push) {
						o[this.name] = [o[this.name]];
					}
					o[this.name].push(this.value || '');
				} else {
					o[this.name] = this.value || '';
				}
			});
			return o;
        };

		$(BrandForm).on("click", '#createBrand', event, function (e) {
			e.preventDefault();
			postBrand("@Url.Action(Constants.ActionCreate, Constants.ControllerBrand)");
		});

		$(BrandForm).on('click', '#saveBrand', event, function (e) {
			e.preventDefault();
			postBrand("@Url.Action(Constants.ActionUpdate, Constants.ControllerBrand)");
		});

		$(BrandForm).on('click', '#cancel', event, function (e) {
			e.preventDefault();
			getCreateForm();
		});
	});
</script>

<style type="text/css">
    .brand-photo {
        display: inline-block;
        width: 50px;
        height: 50px;
        background-size: 50px 50px;
        background-position: center center;
        vertical-align: middle;
        line-height: 50px;
        /*box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);*/
    }
</style>