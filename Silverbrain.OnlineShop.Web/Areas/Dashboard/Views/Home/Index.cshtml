 

@{
    var urlCreate = Url.Action("Create", "City");
    string gridName = "grid_City";
}

<div class="k-rtl ">
    <div class="row">
        <div class="col-12">
            <kendo-grid name="grid" height="550">
                <columns>
                    @*<column field="OrderID" title="Order ID">
                            <filterable enabled="false"></filterable>
                        </column>*@
                    <column field="FirstName" title="FirstName" />
                    <column field="LastName" title="LastName" />
                    <column field="UserName" title="UserName" />
                </columns>
                <scrollable enabled="true" />
                <sortable enabled="true" />
                <pageable enabled="true" button-count="5" refresh="true" page-sizes="new int[] { 5, 10, 20 }">
                </pageable>

                <filterable enabled="true" />
                <datasource type="DataSourceTagHelperType.Ajax" page-size="10">
                    <transport>
                        <read url="@Url.Action("Read", "Home")" />
                    </transport>
                </datasource>
            </kendo-grid>
        </div>
    </div>


    @*@(Html.Kendo().Grid<UserViewModel>()
            .Name(gridName)
                .AutoBind(true)
            .Columns(columns =>
            {
                // columns.Bound(c => c.Id)
                //.HeaderTemplate("<input id='col-checkbox-all' type='checkbox' />")
                //.ClientTemplate("<div ><input class='checkbox chbdelete-list' type='checkbox' data-id='#=Id#'/>#= renderRecordNumber(data) #</div>")
                //.Title("")
                //.Width(70)
                //.Filterable(false)
                //.Sortable(false)
                //.Groupable(false);

            columns.Bound(c => c.FirstName).Width(400);
            columns.Bound(c => c.LastName).Width(400);
            columns.Bound(c => c.UserName).Width(400);


                //columns.Bound(p => p.Id).ClientTemplate("<div style='text-align:center'><a class='btn btn-icon-only blue-sharp circle editclass_#=Id#' onClick='OpenWindowEdit(\"" + Url.Action("Edit", "City") + "?id=#= Id#" + "\")'><i class='fa fa-edit'></i></a></div>")
                //.Title(Captions.Edit)
                //.Width(60)
                //.Filterable(false)
                //.Sortable(false)
                //.Groupable(false);


                //columns.Bound(c => c.Id)
                //.ClientTemplate("<div style='text-align:center'><a class='btn btn-icon-only red circle deleteclass_#=Id#' onclick='Delete(\"#=Id#\", \"/Admin/City/Delete\", \"grid_City\", \"/Admin/City/Create\")'><i class='fa fa-trash'></i></a></div>")
                //.Title(Captions.Delete)
                //.Width(60)
                //.Filterable(false)
                //.Sortable(false)
                //.Groupable(false);


            })
        .Sortable().Selectable()
        .Scrollable(x => x.Height("auto"))
        .Filterable()
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(new[] { 10, 20, 50, 100, 500 })
        .ButtonCount(10))

        .DataSource(dataSource => dataSource
        .Ajax()
        .Sort(x => x.Add(y => y.FirstName))
        .Read(read => read.Action("Read", "ManagementDashboard"))
        ))*@

</div>





